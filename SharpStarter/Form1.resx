<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>